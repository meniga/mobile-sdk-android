{"swagger":"2.0","info":{"version":"user-v1","title":"Meniga API User-V1","description":""},"host":"cashbackapi.umw.meniga.net","basePath":"/user/v1","schemes":["http"],"paths":{"/authentication":{"post":{"tags":["Authentication"],"summary":"Creates a token from email and password","operationId":"Authentication_Login","consumes":["application/json","text/json"],"produces":["application/json","text/json"],"parameters":[{"name":"emailPass","in":"body","description":"Email and password of the user to authenticate","required":true,"schema":{"$ref":"#/definitions/EmailPasswordLoginRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/JsonApiDocument[AuthenticationResponse]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/authentication/after":{"post":{"tags":["Authentication"],"summary":"Perform post authentication tasks.\r\nShould be called after a user is successfully authenticated","operationId":"Authentication_OnAfterLogon","consumes":["application/json","text/json"],"produces":["application/json","text/json"],"parameters":[{"name":"patRequest","in":"body","description":"User identifier, realm identifier and parameters submitted during the authentication","required":true,"schema":{"$ref":"#/definitions/PostAuthenticationTasksRequest"}}],"responses":{"200":{"description":"OK","schema":{"type":"object"}},"401":{"description":"The request requires user authentication. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/authentication/refresh":{"post":{"tags":["Authentication"],"summary":"Refresh the access token to allow long-term access","operationId":"Authentication_RefreshToken","consumes":["application/json","text/json"],"produces":["application/json","text/json"],"parameters":[{"name":"request","in":"body","description":"The refresh token for a logged in person","required":true,"schema":{"$ref":"#/definitions/RefreshTokenRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/JsonApiDocument[AuthenticationResponse]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/authentication/sso/{type}":{"post":{"tags":["Authentication"],"summary":"Authenticate a user using a security token","operationId":"Authentication_SingleSignOn","consumes":[],"produces":["application/json","text/json"],"parameters":[{"name":"type","in":"path","description":"The name of the AuthClaimsProvider that will create authentication claims from the security token","required":true,"type":"string"},{"name":"securityToken","in":"query","description":"The token used to authenticate. If this parameter is empty, the token is read from the post body.","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/JsonApiDocument[AuthenticationResponse]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/offers":{"get":{"tags":["Offers"],"summary":"Get offers","operationId":"Offers_GetOffers","consumes":[],"produces":["application/json","text/json"],"parameters":[{"name":"skip","in":"query","description":"Number of records to skip","required":false,"type":"integer","format":"int32"},{"name":"take","in":"query","description":"Number of records to return","required":false,"type":"integer","format":"int32"},{"name":"skipMeta","in":"query","description":"Skip returning meta object. Note: Total count will not be skipped.","required":false,"type":"boolean"},{"name":"filter.states","in":"query","description":"Offer states to filter by. Expected values \"all, activated, available, declined, expired\".","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"filter.offerIds","in":"query","description":"Offer ids to filter by. The {States} and {ExpiredWithRedemptionsOnly} parameters will be ignored when this parameter is set.","required":false,"type":"array","items":{"type":"integer","format":"int32"},"collectionFormat":"multi"},{"name":"filter.expiredWithRedemptionsOnly","in":"query","description":"Expired offers without any redemption transactions will be excluded when this parameter is set to true.","required":false,"type":"boolean"},{"name":"latitude","in":"query","description":"Central latitude for location filtering.","required":false,"type":"number","format":"double"},{"name":"longitude","in":"query","description":"Central longitude for location filtering.","required":false,"type":"number","format":"double"},{"name":"radiusKm","in":"query","description":"Radius in km for location filtering.","required":false,"type":"number","format":"double"},{"name":"limitLocations","in":"query","description":"The maximum number of locations to be returned (per offer).","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Returns a list of offers","schema":{"$ref":"#/definitions/JsonApiDocument[Offer[],OffersSummary]"}},"400":{"description":"Validation error","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiClientError]"}},"401":{"description":"The request requires user authentication. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/offers/{id}":{"get":{"tags":["Offers"],"summary":"Get offer by id","operationId":"Offers_GetOffer","consumes":[],"produces":["application/json","text/json"],"parameters":[{"name":"id","in":"path","description":"The id of the offer","required":true,"type":"integer","format":"int32"},{"name":"latitude","in":"query","description":"Central latitude for location filtering.","required":false,"type":"number","format":"double"},{"name":"longitude","in":"query","description":"Central longitude for location filtering.","required":false,"type":"number","format":"double"},{"name":"radiusKm","in":"query","description":"Radius in km for location filtering.","required":false,"type":"number","format":"double"},{"name":"limitLocations","in":"query","description":"The maximum number of locations to be returned (per offer).","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Returns a single offer","schema":{"$ref":"#/definitions/JsonApiDocument[Offer]"}},"401":{"description":"The request requires user authentication. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"404":{"description":"Resource not found","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/offers/{token}":{"get":{"tags":["Offers"],"summary":"Get offer by token","operationId":"Offers_GetOffer","consumes":[],"produces":["application/json","text/json"],"parameters":[{"name":"token","in":"path","description":"Offer validation token","required":true,"type":"string"}],"responses":{"200":{"description":"Offer","schema":{"$ref":"#/definitions/JsonApiDocument[Offer]"}},"400":{"description":"Validation error","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiClientError]"}},"404":{"description":"Resource not found","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/offers/{id}/merchantLocations":{"get":{"tags":["Offers"],"summary":"Get nearby merchant locations for offer","operationId":"Offers_GetMerchantLocations","consumes":[],"produces":["application/json","text/json"],"parameters":[{"name":"id","in":"path","description":"Offer id","required":true,"type":"integer","format":"int32"},{"name":"latitude","in":"query","description":"Central latitude for location filtering.","required":false,"type":"number","format":"double"},{"name":"longitude","in":"query","description":"Central longitude for location filtering.","required":false,"type":"number","format":"double"},{"name":"radiusKm","in":"query","description":"Radius in km for location filtering.","required":false,"type":"number","format":"double"},{"name":"limitLocations","in":"query","description":"The maximum number of locations to be returned (per offer).","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Returns nearby merchant locations for the offer","schema":{"$ref":"#/definitions/JsonApiDocument[ICollection[MerchantLocation]]"}},"400":{"description":"Validation error","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiClientError]"}},"401":{"description":"The request requires user authentication. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"404":{"description":"Resource not found","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/offers/{id}/redemptions":{"get":{"tags":["Offers"],"summary":"Get offer redemption transactions","operationId":"Offers_GetOfferTransactions","consumes":[],"produces":["application/json","text/json"],"parameters":[{"name":"id","in":"path","description":"Offer id","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Returns a list of offer redemption transactions","schema":{"$ref":"#/definitions/JsonApiDocument[RedemptionTransaction[]]"}},"401":{"description":"The request requires user authentication. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/offers/{id}/seen":{"post":{"tags":["Offers"],"summary":"Mark offer as seen","operationId":"Offers_SetOfferSeen","consumes":[],"produces":["application/json","text/json"],"parameters":[{"name":"id","in":"path","description":"Offer id","required":true,"type":"integer","format":"int32"}],"responses":{"204":{"description":"Offer marked as seen"},"400":{"description":"Validation error","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiClientError]"}},"401":{"description":"The request requires user authentication. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/offers/{id}/activate":{"post":{"tags":["Offers"],"summary":"Activate offer","operationId":"Offers_ActivateOffer","consumes":[],"produces":["application/json","text/json"],"parameters":[{"name":"id","in":"path","description":"Offer id","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Offer activated","schema":{"$ref":"#/definitions/JsonApiDocument[Offer]"}},"400":{"description":"Validation error","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiClientError]"}},"401":{"description":"The request requires user authentication. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"404":{"description":"Resource not found","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}},"delete":{"tags":["Offers"],"summary":"Decline offer","operationId":"Offers_DeclineOffer","consumes":[],"produces":["application/json","text/json"],"parameters":[{"name":"id","in":"path","description":"Offer id","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Offer declined","schema":{"$ref":"#/definitions/JsonApiDocument[Offer]"}},"400":{"description":"Validation error","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiClientError]"}},"401":{"description":"The request requires user authentication. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"404":{"description":"Resource not found","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/offers/{token}/activate":{"post":{"tags":["Offers"],"summary":"Activate offer by token","operationId":"Offers_ActivateOffer","consumes":[],"produces":["application/json","text/json"],"parameters":[{"name":"token","in":"path","description":"Offer validation token","required":true,"type":"string"}],"responses":{"200":{"description":"Offer activated","schema":{"$ref":"#/definitions/JsonApiDocument[Offer]"}},"400":{"description":"Validation error","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiClientError]"}},"404":{"description":"Resource not found","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/offers/{id}/similarBrandSpending":{"get":{"tags":["Offers"],"summary":"Get similar brand spending","operationId":"Offers_GetSimilarBrandSpending","consumes":[],"produces":["application/json","text/json"],"parameters":[{"name":"id","in":"path","description":"The id of the offer","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Returns similar brand spending","schema":{"$ref":"#/definitions/JsonApiDocument[BrandSpending[],SimilarBrandSpendingDetails]"}},"401":{"description":"The request requires user authentication. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/offers/enable":{"post":{"tags":["Offers"],"summary":"Enable offers","operationId":"Offers_EnableOffers","consumes":[],"produces":["application/json","text/json"],"responses":{"204":{"description":"Offers enabled"},"400":{"description":"Validation error","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiClientError]"}},"401":{"description":"The request requires user authentication. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}},"delete":{"tags":["Offers"],"summary":"Disable offers","operationId":"Offers_DisableOffers","consumes":[],"produces":["application/json","text/json"],"responses":{"204":{"description":"Offers disabled"},"400":{"description":"Validation error","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiClientError]"}},"401":{"description":"The request requires user authentication. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/offers/acceptTermsAndConditions":{"post":{"tags":["Offers"],"summary":"Accept offer terms and conditions","operationId":"Offers_AcceptTermsAndConditions","consumes":[],"produces":["application/json","text/json"],"responses":{"204":{"description":"Offer terms and conditions accepted"},"400":{"description":"Validation error","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiClientError]"}},"401":{"description":"The request requires user authentication. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/redemptions":{"get":{"tags":["Redemptions"],"summary":"Get offer redemption transactions","description":"Paging can be done by using the skip and take parameters.\r\nPeriod filtering can be done with the fromDate and toDate parameters.\r\nThe dateTo value is exclusive except when on same day as dateFrom.\r\nMeta data includes info on all redemptions, not just the filtered transactions.","operationId":"Redemptions_GetRedemptions","consumes":[],"produces":["application/json","text/json"],"parameters":[{"name":"dateFrom","in":"query","description":"The inclusive transaction date to search from","required":false,"type":"string","format":"date-time"},{"name":"dateTo","in":"query","description":"The exlusive transaction date to search to same day as fromDate is included","required":false,"type":"string","format":"date-time"},{"name":"skip","in":"query","description":"Number of records to skip","required":false,"type":"integer","format":"int32"},{"name":"take","in":"query","description":"Number of records to return","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Returns a list of offer redemption transactions","schema":{"$ref":"#/definitions/JsonApiDocument[RedemptionTransaction[],RedemptionSummary]"}},"401":{"description":"The request requires user authentication. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/reimbursementAccounts":{"get":{"tags":["ReimbursementAccounts"],"summary":"Get reimbursement accounts","operationId":"ReimbursementAccounts_GetReimbursementAccounts","consumes":[],"produces":["application/json","text/json"],"parameters":[{"name":"includeInactive","in":"query","description":"Include inactive reimbursement accounts","required":false,"type":"boolean"},{"name":"skip","in":"query","description":"Number of records to skip","required":false,"type":"integer","format":"int32"},{"name":"take","in":"query","description":"Number of records to return","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Returns a list of reimbursement accounts","schema":{"$ref":"#/definitions/JsonApiDocument[ReimbursementAccount[],PaginationMetaModel]"}},"401":{"description":"The request requires user authentication. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}},"post":{"tags":["ReimbursementAccounts"],"summary":"Add reimbursement account","description":"Only one active reimbursement account per user is allowed. Therefore, when a reimbursement account is added\r\nall existing active reimbursement accounts are deactivated.","operationId":"ReimbursementAccounts_AddReimbursementAccount","consumes":["application/json","text/json"],"produces":["application/json","text/json"],"parameters":[{"name":"account","in":"body","description":"Reimbursement account","required":true,"schema":{"$ref":"#/definitions/CreateReimbursementAccount"}}],"responses":{"201":{"description":"Reimbursement account created","schema":{"$ref":"#/definitions/JsonApiDocument[ReimbursementAccount]"}},"400":{"description":"Validation error","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiClientError]"}},"401":{"description":"The request requires user authentication. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/reimbursementAccounts/{id}":{"get":{"tags":["ReimbursementAccounts"],"summary":"Get reimbursement account","operationId":"ReimbursementAccounts_GetReimbursementAccount","consumes":[],"produces":["application/json","text/json"],"parameters":[{"name":"id","in":"path","description":"Reimbursement account id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"Returns a reimbursement account","schema":{"$ref":"#/definitions/JsonApiDocument[ReimbursementAccount]"}},"401":{"description":"The request requires user authentication. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"404":{"description":"Resource not found","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiError]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/reimbursementAccounts/types":{"get":{"tags":["ReimbursementAccounts"],"summary":"Get reimbursement account types","operationId":"ReimbursementAccounts_GetReimbursementAccountTypes","consumes":[],"produces":["application/json","text/json"],"parameters":[{"name":"skip","in":"query","description":"Number of records to skip","required":false,"type":"integer","format":"int32"},{"name":"take","in":"query","description":"Number of records to return","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Returns a list of reimbursement account types","schema":{"$ref":"#/definitions/JsonApiDocument[ReimbursementAccountType[],PaginationMetaModel]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/translations":{"get":{"tags":["Translations"],"summary":"Gets resources by culture","operationId":"Translations_Get","consumes":[],"produces":["application/json","text/json"],"parameters":[{"name":"context","in":"query","description":"The resource context","required":false,"type":"string"},{"name":"culture","in":"query","description":"WARNING: This has been deprecated. Please use Accept-Language HTTP header instead.\r\nThe resource culture","required":false,"type":"string"}],"responses":{"200":{"description":"Get resources by culture","schema":{"$ref":"#/definitions/JsonApiDocument[KeyValue[]]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/translations/context":{"get":{"tags":["Translations"],"summary":"Gets a resource translation given a key, context and culture","operationId":"Translations_GetByKey","consumes":[],"produces":["application/json","text/json"],"parameters":[{"name":"key","in":"query","description":"The resource key","required":false,"type":"string"},{"name":"context","in":"query","description":"The resource context","required":false,"type":"string"},{"name":"culture","in":"query","description":"WARNING: This has been deprecated. Please use Accept-Language HTTP header instead.\r\nThe resource culture","required":false,"type":"string"}],"responses":{"200":{"description":"Resource translation","schema":{"$ref":"#/definitions/JsonApiDocument[KeyValue[]]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}},"/translations/languages":{"get":{"tags":["Translations"],"summary":"Gets a list languages that are available in the system","operationId":"Translations_GetLanguages","consumes":[],"produces":["application/json","text/json"],"responses":{"200":{"description":"Available languages","schema":{"$ref":"#/definitions/JsonApiDocument[CultureLanguage[]]"}},"500":{"description":"The server encountered an unexpected condition which prevented it from fulfilling the request.","schema":{"$ref":"#/definitions/JsonApiErrorDocument[JsonApiServerError]"}}}}}},"definitions":{"EmailPasswordLoginRequest":{"description":"Email and password of a user to authenticate","required":["email","password"],"type":"object","properties":{"email":{"description":"The email to validate","type":"string"},"password":{"description":"The password to validate","type":"string"},"clientId":{"description":"The client ID of the client if engaging in the refresh token flow","type":"string"},"clientSecret":{"description":"The client secret of the client if engaging in the refresh token flow","type":"string"}}},"JsonApiDocument[AuthenticationResponse]":{"description":"A document wrapper for API responses","required":["data"],"type":"object","properties":{"data":{"$ref":"#/definitions/AuthenticationResponse","description":"Primary data"}}},"AuthenticationResponse":{"description":"Authentication information","type":"object","properties":{"accessToken":{"description":"The access token","type":"string"},"refreshToken":{"description":"The refresh token","type":"string"}}},"JsonApiErrorDocument[JsonApiError]":{"description":"A document wrapper for API error responses","required":["errors"],"type":"object","properties":{"errors":{"description":"Errors","type":"array","items":{"$ref":"#/definitions/JsonApiError"}}}},"JsonApiError":{"description":"The base error response message class.\r\n\r\nIt formats the {System.Net.HttpStatusCode} passed in the  to a high level error {Meniga.Runtime.WebApi.Models.Common.JsonApiError.Message}\r\nas defined by the HTTP spec: https://tools.ietf.org/html/rfc2616#section-10\r\nE.g. for HTTP status code \"400\" the {Meniga.Runtime.WebApi.Models.Common.JsonApiError.Message} will be \"Bad Request\"\r\nand for status code \"500\" {Meniga.Runtime.WebApi.Models.Common.JsonApiError.Message} will be \"Internal Server Error\"","required":["message"],"type":"object","properties":{"message":{"description":"The title of the returned HTTP status code according the the HTTP spec,\r\ne.g. for HTTP status code \"400\" the message will be \"Bad Request\"","type":"string"},"messageDetails":{"description":"A detailed description of the error intended for the developer to understand exactly what failed.\r\nThis info is stripped from the response if error details are not configured to be emitted from the api.","type":"string"}}},"JsonApiErrorDocument[JsonApiServerError]":{"description":"A document wrapper for API error responses","required":["errors"],"type":"object","properties":{"errors":{"description":"Errors","type":"array","items":{"$ref":"#/definitions/JsonApiServerError"}}}},"JsonApiServerError":{"description":"A server error object","required":["message"],"type":"object","properties":{"message":{"description":"The title of the returned HTTP status code according the the HTTP spec,\r\ne.g. for HTTP status code \"400\" the message will be \"Bad Request\"","type":"string"},"messageDetails":{"description":"A detailed description of the error intended for the developer to understand exactly what failed.\r\nThis info is stripped from the response if error details are not configured to be emitted from the api.","type":"string"},"exceptionType":{"description":"The stack trace information","type":"string"},"exceptionMessage":{"description":"The stack trace information","type":"string"},"stackTrace":{"description":"The stack trace information","type":"string"}}},"PostAuthenticationTasksRequest":{"description":"Request object with information about the Post Authentication Task.","type":"object","properties":{"userIdentifier":{"type":"string"},"realmIdentifier":{"type":"string"},"parameters":{"type":"object","additionalProperties":{"type":"string"}}}},"RefreshTokenRequest":{"description":"Request object with information about the refresh token","required":["refreshToken"],"type":"object","properties":{"refreshToken":{"description":"The refresh token of the person","type":"string"},"clientId":{"description":"The Id of the client that the refresh token was issued for","type":"string"},"clientSecret":{"description":"The client secret of the client the refresh token was issued for","type":"string"},"subject":{"description":"The subject the refresh token was issued for","type":"string"}}},"OffersFilter":{"description":"Offer filter","type":"object","properties":{"states":{"description":"Offer states to filter by. Expected values \"all, activated, available, declined, expired\".","type":"array","items":{"type":"string"}},"offerIds":{"description":"Offer ids to filter by. The {States} and {ExpiredWithRedemptionsOnly} parameters will be ignored when this parameter is set.","type":"array","items":{"format":"int32","type":"integer"}},"expiredWithRedemptionsOnly":{"description":"Expired offers without any redemption transactions will be excluded when this parameter is set to true.","type":"boolean"}}},"LocationFilter":{"description":"Location filter model","type":"object","properties":{"latitude":{"format":"double","description":"Central latitude for location filtering.","type":"number"},"longitude":{"format":"double","description":"Central longitude for location filtering.","type":"number"},"radiusKm":{"format":"double","description":"Radius in km for location filtering.","type":"number"},"limitLocations":{"format":"int32","description":"The maximum number of locations to be returned (per offer).","type":"integer"}}},"JsonApiDocument[Offer[],OffersSummary]":{"description":"A document wrapper for API responses","required":["data","meta"],"type":"object","properties":{"data":{"description":"Primary data","type":"array","items":{"$ref":"#/definitions/Offer"}},"meta":{"$ref":"#/definitions/OffersSummary","description":"Meta object"}}},"Offer":{"description":"Offer","required":["id","title","brandId","brandName","validationToken","state","rewardType","reward","offerType","totalRedeemedAmount","minimumPurchaseAmount","daysLeft","validFrom","validTo","merchantId","merchantName","merchantDeclined","activateOfferOnFirstPurchase","totalSpendingAtSimilarBrands","totalSpendingOnOffer","offerSimilarBrandsSpendingRatio","seen"],"type":"object","properties":{"id":{"format":"int32","description":"Offer id","type":"integer"},"title":{"description":"Offer title","type":"string"},"description":{"description":"Offer description","type":"string"},"brandId":{"format":"int64","description":"Brand id for the offer. If the offer is for a specific merchant then this property will be zero.","type":"integer"},"brandName":{"description":"Brand name for the offer. If the offer is for a specific merchant then this property will be empty.","type":"string"},"validationToken":{"description":"Offer validation token that can be used to fetch and activate offers without being logged in (email etc)","type":"string"},"state":{"description":"Offer state (Available, Activated, Expired, Declined)","type":"string"},"rewardType":{"description":"Offer reward type (Percentage or FixedAmount)","type":"string"},"reward":{"format":"double","description":"Offer reward. If the RewardType is Percentage then this will return the percentage, otherwise it returns the fixed reward amount.","type":"number"},"offerType":{"description":"Offer type","enum":["None","Onboarding","Loyalty","Uplift","Rescue","Exclusive"],"type":"string"},"totalRedeemedAmount":{"format":"double","description":"Total amount redeemed","type":"number"},"minimumPurchaseAmount":{"format":"double","description":"Minimum purchase amount. Rewards are only given when purchases exceed this amount.","type":"number"},"maximumRedemptionPerOffer":{"format":"double","description":"Maximum redemption amount of the offer","type":"number"},"maximumRedemptionPerPurchase":{"format":"double","description":"Maximum redemption amount per purchase","type":"number"},"minimumAccumulatedAmount":{"format":"double","description":"Minimum accumulated amount to trigger a redemption","type":"number"},"maximumPurchase":{"format":"int32","description":"Maximum number of purchases that can be redeemed","type":"integer"},"lastReimbursementAmount":{"format":"double","description":"The amount of the last reimbursement made to the user","type":"number"},"lastReimbursementDate":{"format":"date-time","description":"The date of the last reimbursement made to the user","type":"string"},"scheduledReimbursementAmount":{"format":"double","description":"The amount of the next reimbursement","type":"number"},"scheduledReimbursementDate":{"format":"date-time","description":"The date of the next reimbursement","type":"string"},"daysLeft":{"format":"int32","description":"Number of days left on the offer","type":"integer"},"validFrom":{"format":"date-time","description":"Offer valid from date","type":"string"},"validTo":{"format":"date-time","description":"Offer valid to date","type":"string"},"activatedDate":{"format":"date-time","description":"The date when the offer was activated","type":"string"},"declineDate":{"format":"date-time","description":"The date when the offer was declined","type":"string"},"merchantId":{"format":"int64","description":"Merchant id for the offer. If the offer is for a whole brand then this property will be zero.","type":"integer"},"merchantName":{"description":"Merchant name for the offer. If the offer is for a specific merchant then this property will be empty.","type":"string"},"merchantDeclined":{"description":"If the offer has been declined this property will indicate whether the merchant was also delcined","type":"boolean"},"activateOfferOnFirstPurchase":{"description":"Indicates whether the offer will be activated automatically on first purchase or not","type":"boolean"},"relevanceHook":{"$ref":"#/definitions/OfferRelevanceHook","description":"A relevance hook for the offer"},"totalSpendingAtSimilarBrands":{"format":"double","description":"Total spending at similar brands during the offer valid period","type":"number"},"totalSpendingOnOffer":{"format":"double","description":"Total spending at the offer brand/merchant during the offer valid period","type":"number"},"offerSimilarBrandsSpendingRatio":{"format":"double","description":"TotalSpendingOnOffer / (TotalSpendingOnOffer + TotalSpendingAtSimilarBrands)","type":"number"},"merchantLocations":{"description":"Nearby merchant locations","type":"array","items":{"$ref":"#/definitions/MerchantLocation"}},"webUri":{"description":"Web uri to display on the offer","type":"string"},"webUriLabel":{"description":"Label to show instead of raw uri","type":"string"},"seen":{"description":"Indicates if the user has seen this offer","type":"boolean"},"firstSeen":{"format":"date-time","description":"The moment the user first saw this offer","type":"string"},"lastSeen":{"format":"date-time","description":"The moment the user last saw this offer","type":"string"}}},"OffersSummary":{"description":"Offers summary","required":["availableOffers","availableOffersActivated","availableOffersDeclined","offersActivated","offersDeclined","offersNotSeen","offersEnabled","termsAndConditionsAccepted","isReimbursementAccountValid","totalCount"],"type":"object","properties":{"availableOffers":{"format":"int32","description":"Number of available offers","type":"integer"},"availableOffersActivated":{"format":"int32","description":"Number of available offers that the user has activated","type":"integer"},"availableOffersDeclined":{"format":"int32","description":"Number of available offers that the user has declined","type":"integer"},"offersActivated":{"format":"int32","description":"Number of offers that the user has activated","type":"integer"},"offersDeclined":{"format":"int32","description":"Number of offers that the user has declined","type":"integer"},"offersNotSeen":{"format":"int32","description":"Number of offers that the user hasn't seen yet","type":"integer"},"offersEnabled":{"description":"Indicates whether the user has enabled the offers feature","type":"boolean"},"offersEnabledTimestamp":{"format":"date-time","description":"The timestamp of the last toggle (enable/disable) of the offers feature","type":"string"},"termsAndConditionsAccepted":{"description":"Indicates whether the user has accepted the offers terms and conditions","type":"boolean"},"isReimbursementAccountValid":{"description":"Indicates whether the user has a valid reimbursement account","type":"boolean"},"totalCount":{"format":"int32","description":"The total count of objects available from the endpoint based on the passed in filter","type":"integer"}}},"OfferRelevanceHook":{"description":"Offer relevance hook","type":"object","properties":{"relevanceHookDetails":{"description":"A URL for more details for a relevance hook","type":"string"},"text":{"description":"Translated relevance hook text","type":"string"}}},"MerchantLocation":{"description":"Merchant location model","type":"object","properties":{"id":{"format":"int64","description":"Merchant ID.","type":"integer"},"identifier":{"format":"uuid","description":"Unique identifier.","type":"string"},"latitude":{"format":"double","description":"Latitude.","type":"number"},"longitude":{"format":"double","description":"Longitude.","type":"number"},"name":{"description":"Name.","type":"string"},"address":{"description":"Address.","type":"string"},"webpage":{"description":"The URL for the merchant's web page.","type":"string"},"distanceKm":{"format":"double","description":"Distance to merchant in km or null if unknown.","type":"number"}}},"JsonApiErrorDocument[JsonApiClientError]":{"description":"A document wrapper for API error responses","required":["errors"],"type":"object","properties":{"errors":{"description":"Errors","type":"array","items":{"$ref":"#/definitions/JsonApiClientError"}}}},"JsonApiClientError":{"description":"A bad request error object to be used with any 4xx HTTP error status code","required":["message"],"type":"object","properties":{"message":{"description":"The title of the returned HTTP status code according the the HTTP spec,\r\ne.g. for HTTP status code \"400\" the message will be \"Bad Request\"","type":"string"},"messageDetails":{"description":"A detailed description of the error intended for the developer to understand exactly what failed.\r\nThis info is stripped from the response if error details are not configured to be emitted from the api.","type":"string"},"modelState":{"description":"A dictionary of property names (keys) and error messages (values) when creating or updating a resource.","type":"object"}}},"JsonApiDocument[Offer]":{"description":"A document wrapper for API responses","required":["data"],"type":"object","properties":{"data":{"$ref":"#/definitions/Offer","description":"Primary data"}}},"JsonApiDocument[ICollection[MerchantLocation]]":{"description":"A document wrapper for API responses","required":["data"],"type":"object","properties":{"data":{"description":"Primary data","type":"array","items":{"$ref":"#/definitions/MerchantLocation"}}}},"JsonApiDocument[RedemptionTransaction[]]":{"description":"A document wrapper for API responses","required":["data"],"type":"object","properties":{"data":{"description":"Primary data","type":"array","items":{"$ref":"#/definitions/RedemptionTransaction"}}}},"RedemptionTransaction":{"description":"A transaction that generates a redemption for an offer","required":["id","redemptionId","offerId","text","amount","redemptionAmount","redemptionType","reimbursementStatus"],"type":"object","properties":{"id":{"format":"int64","description":"Id of the transaction","type":"integer"},"redemptionId":{"format":"int64","description":"Id of the redemption record","type":"integer"},"offerId":{"format":"int32","description":"Id of the offer that the transaction is related to","type":"integer"},"text":{"description":"Transaction text","type":"string"},"date":{"format":"date-time","description":"Transaction's date","type":"string"},"amount":{"format":"double","description":"Transaction's amount","type":"number"},"redemptionAmount":{"format":"double","description":"Amount redeemed for the transaction","type":"number"},"redemptionType":{"description":"Redemption type for the transaction","type":"string"},"reimbursementStatus":{"description":"Reimbursement status","type":"string"},"reimbursementDate":{"format":"date-time","description":"Date of the reimbursement","type":"string"},"scheduledReimbursementDate":{"format":"date-time","description":"Scheduled date of the reimbursement","type":"string"},"reimbursementAccountInfo":{"description":"Reimbursement account info","type":"string","readOnly":true}}},"JsonApiDocument[BrandSpending[],SimilarBrandSpendingDetails]":{"description":"A document wrapper for API responses","required":["data","meta"],"type":"object","properties":{"data":{"description":"Primary data","type":"array","items":{"$ref":"#/definitions/BrandSpending"}},"meta":{"$ref":"#/definitions/SimilarBrandSpendingDetails","description":"Meta object"}}},"BrandSpending":{"description":"Brand spending","required":["brandName","brandId","spentAmount"],"type":"object","properties":{"brandName":{"description":"Brand name","type":"string"},"brandId":{"format":"int64","description":"Brand Id","type":"integer"},"spentAmount":{"format":"double","description":"Amount spent","type":"number"}}},"SimilarBrandSpendingDetails":{"description":"Similar brand spending details","type":"object","properties":{"startDate":{"format":"date-time","description":"The spending period start date","type":"string"},"endDate":{"format":"date-time","description":"The spending period end date","type":"string"}}},"JsonApiDocument[RedemptionTransaction[],RedemptionSummary]":{"description":"A document wrapper for API responses","required":["data","meta"],"type":"object","properties":{"data":{"description":"Primary data","type":"array","items":{"$ref":"#/definitions/RedemptionTransaction"}},"meta":{"$ref":"#/definitions/RedemptionSummary","description":"Meta object"}}},"RedemptionSummary":{"description":"Redemption summary for all offers","required":["activatedOffers","spentAmount","redeemedAmount","notReimbursedAmount","reimbursedAmount","nextReimbursementAmount","scheduledReimbursements","totalCount"],"type":"object","properties":{"activatedOffers":{"format":"int32","description":"Number of offers the user has activated","type":"integer"},"spentAmount":{"format":"double","description":"The total amount spent in offers","type":"number"},"redeemedAmount":{"format":"double","description":"Total amount redeemed for all offers","type":"number"},"notReimbursedAmount":{"format":"double","description":"Total amount no reimbursed yet.","type":"number"},"reimbursedAmount":{"format":"double","description":"Total amount reimbursed","type":"number"},"nextReimbursementAmount":{"format":"double","description":"The amount reimbursed to the user on the next reimbursement date","type":"number"},"scheduledReimbursements":{"description":"Redemptions that have not yet been reimbursed","type":"array","items":{"$ref":"#/definitions/Reimbursement"}},"totalCount":{"format":"int32","description":"The total count of objects available from the endpoint based on the passed in filter","type":"integer"}}},"Reimbursement":{"description":"Offer reimbursement","required":["date","account","amount"],"type":"object","properties":{"date":{"format":"date-time","description":"Reimbursement date","type":"string"},"account":{"description":"Reimbursement account","type":"string"},"amount":{"format":"double","description":"Reimbursement amount","type":"number"}}},"JsonApiDocument[ReimbursementAccount[],PaginationMetaModel]":{"description":"A document wrapper for API responses","required":["data","meta"],"type":"object","properties":{"data":{"description":"Primary data","type":"array","items":{"$ref":"#/definitions/ReimbursementAccount"}},"meta":{"$ref":"#/definitions/PaginationMetaModel","description":"Meta object"}}},"ReimbursementAccount":{"description":"Reimbursement Account","required":["id","isActive","isVerified","accountType","accountInfo"],"type":"object","properties":{"id":{"format":"int64","description":"The reimbursement account id","type":"integer"},"isActive":{"description":"Indicates whether the reimbursement account is active or not","type":"boolean"},"isVerified":{"description":"Indicates whether the reimbursement account has been verified or not","type":"boolean"},"name":{"description":"The reimbursement account name","type":"string"},"accountType":{"description":"The reimbursement account type name","type":"string"},"accountInfo":{"description":"Account information in the format determined by the account type","type":"string"}}},"PaginationMetaModel":{"description":"Provides meta information for paginated endpoints","required":["totalCount"],"type":"object","properties":{"totalCount":{"format":"int32","description":"The total count of objects available from the endpoint based on the passed in filter","type":"integer"}}},"CreateReimbursementAccount":{"description":"Reimbursement Account","required":["accountType","accountInfo"],"type":"object","properties":{"name":{"description":"The reimbursement account name","type":"string"},"accountType":{"description":"The reimbursement account type name","type":"string"},"accountInfo":{"description":"Account information in the format determined by the account type","type":"string"}}},"JsonApiDocument[ReimbursementAccount]":{"description":"A document wrapper for API responses","required":["data"],"type":"object","properties":{"data":{"$ref":"#/definitions/ReimbursementAccount","description":"Primary data"}}},"JsonApiDocument[ReimbursementAccountType[],PaginationMetaModel]":{"description":"A document wrapper for API responses","required":["data","meta"],"type":"object","properties":{"data":{"description":"Primary data","type":"array","items":{"$ref":"#/definitions/ReimbursementAccountType"}},"meta":{"$ref":"#/definitions/PaginationMetaModel","description":"Meta object"}}},"ReimbursementAccountType":{"description":"Reimbursement account type","required":["name"],"type":"object","properties":{"id":{"format":"int32","description":"The reimbursement account type id","type":"integer"},"name":{"description":"The reimbursement account type name","type":"string"}}},"TranslationsRequest":{"type":"object","properties":{"context":{"description":"The resource context","type":"string"},"culture":{"description":"WARNING: This has been deprecated. Please use Accept-Language HTTP header instead.\r\nThe resource culture","type":"string"}}},"JsonApiDocument[KeyValue[]]":{"description":"A document wrapper for API responses","required":["data"],"type":"object","properties":{"data":{"description":"Primary data","type":"array","items":{"$ref":"#/definitions/KeyValue"}}}},"KeyValue":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}},"TranslationsContextRequest":{"type":"object","properties":{"key":{"description":"The resource key","type":"string"},"context":{"description":"The resource context","type":"string"},"culture":{"description":"WARNING: This has been deprecated. Please use Accept-Language HTTP header instead.\r\nThe resource culture","type":"string"}}},"JsonApiDocument[CultureLanguage[]]":{"description":"A document wrapper for API responses","required":["data"],"type":"object","properties":{"data":{"description":"Primary data","type":"array","items":{"$ref":"#/definitions/CultureLanguage"}}}},"CultureLanguage":{"type":"object","properties":{"id":{"format":"int32","description":"Gets or sets the id.","type":"integer"},"name":{"description":"Gets or sets the name.","type":"string"},"culture":{"description":"Gets or sets the culture.","type":"string"}}}}}
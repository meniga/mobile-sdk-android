apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "kotlin-parcelize"
apply plugin: "org.jetbrains.dokka"
apply from: "$rootDir/gradle/coverage.gradle"
apply from: "$rootDir/gradle/deploy.gradle"
apply from: "$rootDir/gradle/pom-customizer.gradle"
apply from: "$rootDir/gradle/swagger-json-updater.gradle"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        consumerProguardFiles "proguard-rules.pro"
    }
    buildTypes {
        release {
            minifyEnabled false
        }
        debug {
            testCoverageEnabled true
            testProguardFile "proguard-rules.pro"
        }
    }
    testOptions {
        unitTests {
            returnDefaultValues = true
            all {
                systemProperty "file.encoding", "UTF-8"
                systemProperty "user.timezone", "UTC"
                testLogging {
                    exceptionFormat "full"
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    packagingOptions {
        exclude "META-INF/LICENSE.txt"
        exclude "META-INF/NOTICE.txt"
    }
    sourceSets {
        test {
            java.srcDirs += "src/integrationTest/java"
            resources.srcDirs += "src/integrationTest/resources"
        }
    }
}

dependencies {
    compileOnly "com.google.code.findbugs:jsr305:3.0.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$okHttpVersion"
    api "net.danlew:android.joda:2.10.9.1"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.google.code.gson:gson:2.8.6"
    implementation "javax.inject:javax.inject:1"
    implementation "javax.annotation:javax.annotation-api:1.3.2"

    testImplementation "com.atlassian.oai:swagger-request-validator-core:1.4.2"
    testImplementation "com.jayway.jsonpath:json-path-assert:2.5.0"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okHttpVersion"
    testImplementation "com.squareup.retrofit2:retrofit-mock:$retrofitVersion"
    testImplementation "junit:junit:4.13.2"
    testImplementation "net.jodah:concurrentunit:0.4.6"
    testImplementation "org.assertj:assertj-core:3.19.0"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spekVersion"
    testImplementation "org.spekframework.spek2:spek-runner-junit5:$spekVersion"
    testImplementation "org.junit.platform:junit-platform-runner:1.7.1"
    testImplementation "org.junit.vintage:junit-vintage-engine:5.7.1"
    testImplementation "org.robolectric:robolectric:4.5.1"
    testImplementation "org.mockito:mockito-core:5.1.0"
}

dokkaJavadoc {
    outputDirectory.set(file("${buildDir}/javadoc"))
}

task androidJavadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set("javadoc")
    from dokkaJavadoc
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from android.sourceSets.main.java.srcDirs
}

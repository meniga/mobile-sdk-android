apply plugin: "com.android.library"
apply plugin: "digital.wup.android-maven-publish"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "org.jetbrains.dokka-android"
apply from: "$rootDir/gradle/coverage.gradle"
apply from: "$rootDir/gradle/deploy.gradle"
apply from: "$rootDir/gradle/pom-customizer.gradle"
apply from: "$rootDir/gradle/swagger-json-updater.gradle"

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 28
        consumerProguardFiles "proguard-rules.pro"
    }
    buildTypes {
        release {
            minifyEnabled false
        }
        debug {
            testCoverageEnabled true
            testProguardFile "proguard-rules.pro"
        }
    }
    testOptions {
        unitTests {
            returnDefaultValues = true
            all {
                systemProperty "file.encoding", "UTF-8"
                systemProperty "user.timezone", "UTC"
                testLogging {
                    exceptionFormat "full"
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    packagingOptions {
        exclude "META-INF/LICENSE.txt"
        exclude "META-INF/NOTICE.txt"
    }
    sourceSets {
        test {
            java.srcDirs += "src/integrationTest/java"
            resources.srcDirs += "src/integrationTest/resources"
        }
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    compileOnly "com.google.code.findbugs:jsr305:3.0.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$okHttpVersion"
    api "net.danlew:android.joda:2.10.0"
    implementation "com.squareup.retrofit2:retrofit:2.3.0"
    implementation "com.squareup.retrofit2:converter-gson:2.3.0"
    implementation "com.google.code.gson:gson:2.8.5"
    implementation "javax.inject:javax.inject:1"
    implementation "javax.annotation:javax.annotation-api:1.3.2"

    testImplementation "com.atlassian.oai:swagger-request-validator-core:1.4.2"
    testImplementation "com.jayway.jsonpath:json-path-assert:2.4.0"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okHttpVersion"
    testImplementation "com.squareup.retrofit2:retrofit-mock:2.1.0"
    testImplementation "junit:junit:4.12"
    testImplementation "net.jodah:concurrentunit:0.4.3"
    testImplementation "org.assertj:assertj-core:3.10.0"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testImplementation "org.jetbrains.spek:spek-api:$spekVersion"
    testImplementation "org.jetbrains.spek:spek-junit-platform-engine:$spekVersion"
    testImplementation "org.junit.platform:junit-platform-runner:1.3.1"
    testImplementation "org.junit.vintage:junit-vintage-engine:5.3.1"
    testImplementation "org.robolectric:robolectric:3.8"
}

dokka {
    outputFormat = "javadoc"
    outputDirectory = "${buildDir}/javadoc"
}

task androidJavadocJar(type: Jar, dependsOn: dokka) {
    classifier = "javadoc"
    from dokka
}

task androidSourcesJar(type: Jar) {
    classifier = "sources"
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidJavadocJar
    archives androidSourcesJar
}

publishing {
    publications {
        aar(MavenPublication) {
            from components.android
            groupId rootProject.name
            artifactId = project.name
            version = project.version
            customizePom(pom)
        }
    }
}

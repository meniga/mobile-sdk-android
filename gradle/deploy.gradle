apply plugin: "maven-publish"
apply plugin: "signing"

ext {
    sonatypeCredentials = (project.hasProperty("sonatype.credentials") ?
            project.property("sonatype.credentials") :
            System.getenv("SONATYPE_CREDENTIALS") ?: "")
            .split(":")

    isSnapshot = project.version.toString().endsWith("-SNAPSHOT")
}

task publishSnapshot() {
    if (isSnapshot) { dependsOn "publishAarPublicationToMavenRepository" }
}

task publishRelease() {
    if (!isSnapshot) {
        Task closeTask = tasks.getByPath(":closeRepository")
        Task releaseTask = tasks.getByPath(":releaseRepository")
        closeTask.dependsOn ":sdk-android:publishAarPublicationToMavenRepository"
        dependsOn closeTask, releaseTask
    }
}

nexusStaging {
    packageGroup = "com.meniga"
    stagingProfileId = "38d85abe8cb003"
    username = sonatypeCredentials.first()
    password = sonatypeCredentials.last()
}

afterEvaluate {
    publishing {
        publications {
            aar(MavenPublication) {
                from components.release
                groupId rootProject.name
                artifactId project.name
                version project.version
                customizePom(pom)
                artifact androidJavadocJar
                artifact androidSourcesJar
            }
        }
        repositories {
            maven {
                url = isSnapshot ?
                        "https://oss.sonatype.org/content/repositories/snapshots/" :
                        "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username sonatypeCredentials.first()
                    password sonatypeCredentials.last()
                }
            }
        }
    }
    signing {
        String signingKey = System.getenv("SIGNING_ARMORED_KEY")
        String signingPassword = System.getenv("SIGNING_PASSWORD")
        useInMemoryPgpKeys(signingKey, signingPassword)
        sign publishing.publications.aar
    }
}
